name: Build and Release xmrig for Linux ARM64

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build xmrig for ARM64
      run: |
        docker run --rm -v $(pwd):/xmrig -w /xmrig --platform=linux/arm64 ubuntu:24.04 /bin/bash -c "
          apt-get update
          apt-get install -y git build-essential cmake libuv1-dev:arm64 libssl-dev:arm64 libhwloc-dev:arm64 libudev-dev:arm64 libblkid-dev:arm64 libselinux1-dev:arm64 gcc-aarch64-linux-gnu g++-aarch64-linux-gnu pkg-config
          mkdir build && cd build
          cmake .. -DARM_TARGET=8 -DWITH_HWLOC=ON -DHWLOC_LIBRARY=/usr/lib/aarch64-linux-gnu/libhwloc.a -DLIBUV_USE_STATIC=ON -DOPENSSL_USE_STATIC_LIBS=ON -DWITH_GHOSTRIDER=OFF -DLIBUDEV_LIBRARY=/usr/lib/aarch64-linux-gnu/libudev.a -DLIBBLKID_LIBRARY=/usr/lib/aarch64-linux-gnu/libblkid.a -DLIBSELINUX_LIBRARY=/usr/lib/aarch64-linux-gnu/libselinux.a
          make -j$(nproc)
        "

    - name: Prepare release asset
      run: |
        mv build/xmrig xmrig-arm64
        chmod +x xmrig-arm64
        sha256sum xmrig-arm64 > xmrig-arm64.sha256

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          xmrig-arm64
          xmrig-arm64.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
